<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts-rsses on Thong Kuah&#39;s blog</title>
    <link>https://blog.kuahyeow.com/posts/index.xml</link>
    <description>Recent content in Posts-rsses on Thong Kuah&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 14 Jan 2018 20:18:40 +1300</lastBuildDate>
    <atom:link href="https://blog.kuahyeow.com/posts/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Shell tools</title>
      <link>https://blog.kuahyeow.com/posts/shell-tools/</link>
      <pubDate>Sun, 14 Jan 2018 20:18:40 +1300</pubDate>
      
      <guid>https://blog.kuahyeow.com/posts/shell-tools/</guid>
      <description>&lt;p&gt;I have embraced the Unix philosophy of small tools done well. It started when I resolved to use
&lt;em&gt;Bash&lt;/em&gt; to solve weekly challenges at work (another neat idea, more on that another time!). Here&amp;rsquo;s
some neat little tricks I have learned over time :&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sort -n&lt;/code&gt; : sort numerically&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sort -k 1&lt;/code&gt; : sort by a field&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sort -t &amp;quot;/&amp;quot; -k 3&lt;/code&gt; : sort by the third field, split by &amp;ldquo;/&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;uniq -c&lt;/code&gt; : uniq and list the counts. Combine with &lt;code&gt;sort -n&lt;/code&gt; for great success&lt;/p&gt;

&lt;p&gt;&lt;code&gt;cut -d &amp;quot; &amp;quot; -f 2,3&lt;/code&gt; : The cut utility is so useful - gets data out from tables for you quickly&lt;/p&gt;

&lt;p&gt;&lt;code&gt;xargs -I {} echo {}.txt&lt;/code&gt; : Use xargs to construct these arguments for echo to run&lt;/p&gt;

&lt;p&gt;&lt;code&gt;xargs -t echo&lt;/code&gt; : Print out the command before running it.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;xargs -n1 echo&lt;/code&gt; : Run echo once per input&lt;/p&gt;

&lt;p&gt;&lt;code&gt;grep -E &amp;quot;(a|b|c)&amp;quot;&lt;/code&gt; : grep with extended regexp&lt;/p&gt;

&lt;p&gt;&lt;code&gt;grep -v pattern&lt;/code&gt; : show lines &lt;em&gt;not&lt;/em&gt; matching the pattern&lt;/p&gt;

&lt;p&gt;&lt;code&gt;grep -o pattern&lt;/code&gt; : show only the matching part&lt;/p&gt;

&lt;p&gt;Combine the above commands with pipe (&lt;code&gt;|&lt;/code&gt;) and one can achieve a lot !&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Beyond Code</title>
      <link>https://blog.kuahyeow.com/posts/beyond-code/</link>
      <pubDate>Sun, 27 Aug 2017 09:47:34 +1200</pubDate>
      
      <guid>https://blog.kuahyeow.com/posts/beyond-code/</guid>
      <description>&lt;p&gt;A developer came to me with a great piece of code to automate something. Clearly they have put a good amount
of thought about the amount of times this thing has been done manually and has done the important work of codifying
it enough such that it can be run by a computer.&lt;/p&gt;

&lt;p&gt;We both asked the question &amp;ldquo;What&amp;rsquo;s next ?&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;In the discussion that followed, we roughly applied the following meta-questions to the situation at hand :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What do you hope to achieve with this code ?&lt;/li&gt;
&lt;li&gt;How will you know you have achieved your aim? Who can help you ?&lt;/li&gt;
&lt;li&gt;Consider maintenance. Who will maintain it ? Is it you - or what&amp;rsquo;s your rough plan to hand it over ? Will this gel with your aims ?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In general, the above 3 questions can be applied at increasing intervals, e.g. 1 week after code launch, 1 month after, 1 year after.
With longer time frames, the details become less important but the direction should remain the same. Note the importance of people
in the system we are considering. But it all starts with your aims, and being able to clearly articulate that aim(s).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Write to NTFS with MacOS</title>
      <link>https://blog.kuahyeow.com/posts/write_to_ntfs_with_macos/</link>
      <pubDate>Tue, 18 Jul 2017 20:32:50 +1200</pubDate>
      
      <guid>https://blog.kuahyeow.com/posts/write_to_ntfs_with_macos/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m always surprised when I plug in the family&amp;rsquo;s external HD and find that my Mac refuses
to write to it. Hopefully one day, it will be fixed. So what do I do ?&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;In the meantime, I followed the handy instructions at &lt;a href=&#34;https://github.com/osxfuse/osxfuse/wiki/NTFS-3G&#34;&gt;https://github.com/osxfuse/osxfuse/wiki/NTFS-3G&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is what I got below. It looks the first time I installed osxfuse without choosing the
&amp;ldquo;MacOs compatability&amp;rdquo; option.&lt;/p&gt;

&lt;p&gt;The second time I tried it, it was already mounted, so I had to click the &amp;ldquo;eject&amp;rdquo; icon for
the drive in Finder.&lt;/p&gt;

&lt;p&gt;The third time, it seemed to work but was waiting on the &amp;ldquo;Fixing&amp;rdquo; line for a long time
which was worrying but nothing bad happened, hurray !&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
kuah-air:~ kuahyeow$ sudo ntfs-3g /dev/disk3s1 /Volumes/NTFS -olocal -oallow_other
dyld: Library not loaded: /usr/local/lib/libfuse.2.dylib
  Referenced from: /usr/local/bin/ntfs-3g
  Reason: image not found
kuah-air:~ kuahyeow$ sudo ntfs-3g /dev/disk3s1 /Volumes/NTFS -olocal -oallow_other
Error opening &#39;/dev/disk3s1&#39;: Resource busy
Failed to mount &#39;/dev/disk3s1&#39;: Resource busy
Mount is denied because the NTFS volume is already exclusively opened.
The volume may be already mounted, or another software may use it which
could be identified for example by the help of the &#39;fuser&#39; command.
kuah-air:~ kuahyeow$ sudo ntfs-3g /dev/disk3s1 /Volumes/NTFS -olocal -oallow_other
The disk contains an unclean file system (0, 0).
The file system wasn&#39;t safely closed on Windows. Fixing.

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Props to the developers of osxfuse and ntfs-3g !&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>7 years at Powershop</title>
      <link>https://blog.kuahyeow.com/posts/7-years-at-powershop/</link>
      <pubDate>Fri, 31 Mar 2017 22:36:42 +1300</pubDate>
      
      <guid>https://blog.kuahyeow.com/posts/7-years-at-powershop/</guid>
      <description>&lt;p&gt;On the 15th of March, 2017, I marked 7 years with Powershop ! ðŸŽ‰&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;[1] This is me working for Powershop at YouDo + 4 years employed at Powershop proper.&lt;/p&gt;

&lt;p&gt;From the beginning, it was a roller coaster ride fixing incidents, adding features and scheming fun things
with the crew at Powershop including Paddy the friendly labrador (miss him!). It was a small team of developers working as
consultants. Rails was young, plugins were in, I gave up losing wifi on every Ubuntu upgrade for a Mac.&lt;/p&gt;

&lt;p&gt;Fast forward three years, we found ourselves in Newtown, or maybe it&amp;rsquo;s Mt Cook. I started leading teams,
and projects. I really enjoyed the growing and caring of others on the team.
We had fun team names such as &amp;ldquo;&amp;lt;3&amp;rdquo;.
We delivered such goodness including a new price comparison site, &lt;a href=&#34;https://www.powershop.com.au&#34;&gt;Powershop Australia&lt;/a&gt;,
a new pricing engine, and &lt;a href=&#34;http://www.powershop.co.uk&#34;&gt;Powershop UK&lt;/a&gt; !&lt;/p&gt;

&lt;p&gt;This point in time also marks my first year as a Development Manager. I will like to devote more time to this in future posts.
In the meantime, have a read at this excellent post from my colleague, Emma Bassett about &lt;a href=&#34;https://wecraft.powershop.com/development/reflections-of-a-new-powershop-software-development-manager/&#34;&gt;her reflections&lt;/a&gt; from a year ago.&lt;/p&gt;

&lt;p&gt;Not everything was a success the first time around, but the people here really value learning
from our mistakes. The managers at Powershop also put a great deal of
&lt;a href=&#34;https://medium.com/@mogest/building-a-great-culture-in-your-tech-team-e98524f52f9a&#34; title=&#34;Building a great culture&#34;&gt;deliberate thought&lt;/a&gt;
into the culture, which I can see it paying off in spades.&lt;/p&gt;

&lt;p&gt;Personally, this really, really showed when I was practising for my &lt;a href=&#34;https://blog.kuahyeow.com/posts/code-review-rubyconf-au&#34;&gt;RubyConf AU talk&lt;/a&gt;. Believe me,
I was horrible the first few rounds. Everyone was really encouraging though, and Roger took the time
and effort to observe how I spoke and helped me out on specific points of speech delivery.&lt;/p&gt;

&lt;p&gt;From the teams I was in, I have the great pleasure of working with some exceptional people.
It has been really awesome to be around to watch all of you (you know who are!) grow in such a short
space of time. I also currently have the great pleasure of working with a fantastic and collaborative set of peers, who I know,
I can&amp;rsquo;t find anywhere else. 7 years ago, I went in hoping to learn from some smart people. 7 years later, I&amp;rsquo;m
still here not just because of the learning but the people around here are the perfect combination of smart, respectful and caring.
Long may it continue.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Non-secure sites in Chrome</title>
      <link>https://blog.kuahyeow.com/posts/chrome-non-secure-sites/</link>
      <pubDate>Sun, 15 Jan 2017 08:28:57 +1300</pubDate>
      
      <guid>https://blog.kuahyeow.com/posts/chrome-non-secure-sites/</guid>
      <description>&lt;p&gt;Sometime in the future, possibly in 2017, Chrome is seeking to mark &lt;em&gt;all&lt;/em&gt; non-secure sites with a bold and loud warning.
For website administrators and server operators, this is one to watch out for.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Beginning in January 2017 (Chrome 56), weâ€™ll mark HTTP pages that collect passwords or credit cards as non-secure, as part of a long-term plan to mark all HTTP sites as non-secure.&lt;/p&gt;

&lt;p&gt;&lt;cite&gt;From &lt;a href=&#34;https://security.googleblog.com/2016/09/moving-towards-more-secure-web.html&#34;&gt;Google Online Security Blog&lt;/a&gt;, published September 2016&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As that blog post and others mention on the internet, we are increasingly moving to HTTPS with good reason.
It should be cheap and easy as well to secure your website.&lt;/p&gt;

&lt;p&gt;For the tinkerers, you can preview what the changes will look like in Chrome 55 (&lt;em&gt;caveat emptor&lt;/em&gt;, flags are experimental)&lt;/p&gt;

&lt;p&gt;Go to &lt;code&gt;chrome://flags/&lt;/code&gt; and find the &lt;code&gt;mark-non-secure-as&lt;/code&gt; flag. There will be several options to choose from.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://blog.kuahyeow.com/images/mark-non-secure-flag-in-chrome.png&#34; alt=&#34;Mark non-secure site flag&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://blog.kuahyeow.com/images/non-secure-options.png&#34; alt=&#34;Non-secure indicator options&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The last option should make Chrome behave as it would be in Chrome 56.
I prefer the third option personally as it clearly shows which sites are HTTP, ie sites that could be modified by anyone in transit
or monitored (think stealing passwords).
&amp;ldquo;Always mark HTTP as actively dangerous&amp;rdquo; is also presumably the future state of Chrome in an unspecified date.&lt;/p&gt;

&lt;p&gt;This seems to be me, a good way to transition to a more secure web, and it&amp;rsquo;s good to see someone shepherding the enormity that is the Internet towards that goal.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Code Review talk</title>
      <link>https://blog.kuahyeow.com/posts/code-review-rubyconf-au/</link>
      <pubDate>Tue, 06 Dec 2016 22:43:30 +1300</pubDate>
      
      <guid>https://blog.kuahyeow.com/posts/code-review-rubyconf-au/</guid>
      <description>&lt;p&gt;It was a great pleasure and honour to give a talk at &lt;a href=&#34;http://www.rubyconf.org.au/2016&#34;&gt;RubyConf Australia 2016&lt;/a&gt; in Gold Coast,
in the month of February 2016.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;My talk was about the cultural learnings of code review, as practised in Powershop.
Here is the
&lt;a href=&#34;https://rubyconf.eventer.com/rubyconf-australia-2016-1489/code-review-pitfalls-and-good-practices-by-thong-kuah-1930&#34;&gt;video of my talk&lt;/a&gt;.
Enjoy!&lt;/p&gt;

&lt;p&gt;You can also find slides at &lt;a href=&#34;https://speakerdeck.com/kuahyeow/code-review-pitfalls-and-good-practices&#34;&gt;Speaker Deck&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The conference itself was awesome, the organisers really went out of their way to help us feel welcome and happy. The speakers,
for example were treated to a early morning breakfasts with Dolphins. The closing party at MovieWorld was brilliant too -
outdoor dinner with heaps of yummy food and we got part of the park all to ourselves. Everyone at the conference was positive and
cheerful. This was my second time at a RubyConf Australia, and it was well worth it.&lt;/p&gt;

&lt;p&gt;The next RubyConf Australia next year in 2017 will be back in Melbourne. If you are considering attending the conference, go for it !&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Convert array to hash of hashes...</title>
      <link>https://blog.kuahyeow.com/posts/russian-doll-hashes/</link>
      <pubDate>Sun, 04 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.kuahyeow.com/posts/russian-doll-hashes/</guid>
      <description>&lt;p&gt;I wanted to convert a array of &lt;code&gt;[item1, item2, item3]&lt;/code&gt; to &lt;code&gt;{item1 =&amp;gt; {item2 =&amp;gt; item3}}&lt;/code&gt;.
Here is the quick and dirty code I came up with&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def convert_to_hash(array)                                                                                                                            
  last = array.slice(1..-1)                                                                                                                           
  value = last.empty? ? {} : convert_to_hash(last)                                                                                                    
  {array[0] =&amp;gt; value}                                                                                                                                 
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I am not proud :/&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Reboot with Hugo</title>
      <link>https://blog.kuahyeow.com/posts/reboot-with-hugo/</link>
      <pubDate>Mon, 24 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.kuahyeow.com/posts/reboot-with-hugo/</guid>
      <description>&lt;p&gt;Thanks to the magic of static site generators, I&amp;rsquo;ve now moved from Blogger to &lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All static site generators are much for muchness, but Hugo appealed to me with the chance of at least hacking in Go.
The main benefit though would be archive all my writing in &lt;code&gt;git&lt;/code&gt; - which can now be found at &lt;a href=&#34;https://github.com/kuahyeow/kuahyeow-blog&#34;&gt;https://github.com/kuahyeow/kuahyeow-blog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The code to generate my blog is kept in a separate &lt;a href=&#34;https://github.com/kuahyeow/kuahyeow-hugo&#34;&gt;repository&lt;/a&gt;. Besides the folders to drive
Hugo, I have included a home-made Blogger to Hugo importer. See &lt;a href=&#34;https://github.com/kuahyeow/kuahyeow-hugo/blob/master/importedFromBlogger/blogger2markdown.rb&#34;&gt;https://github.com/kuahyeow/kuahyeow-hugo/blob/master/importedFromBlogger/blogger2markdown.rb&lt;/a&gt;
for full gory details.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Land and Waste New Zealand - #mixandmashnz</title>
      <link>https://blog.kuahyeow.com/posts/land-and-waste-new-zealand-mixandmashnz/</link>
      <pubDate>Sun, 25 Sep 2011 13:01:00 +1300</pubDate>
      
      <guid>https://blog.kuahyeow.com/posts/land-and-waste-new-zealand-mixandmashnz/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://blog.kuahyeow.com/legacyBlogger/400/tilemill-map.png&#34; alt=&#34;Land And Waste New Zealand&#34; title=&#34;Land And Waste New Zealand&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s a behind the scenes write-up for my Mix and Mash NZ mashup.&lt;br /&gt;&lt;br /&gt;Check it out here :&lt;br /&gt;&lt;br /&gt;&lt;a href=&#34;http://www.landandwaste.co.nz/&#34;&gt;http://www.landandwaste.co.nz&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;This mashup attempts to show land and waste data as it changes, and hopefully illuminates any improvements of our environmental impact as well as regressions.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;The journey&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;It started out as an idea to gather all kerb recycling data from all 75 odd local councils in New Zealand. That meant scraping the data off the websites of various local and unitary councils. I quickly backed away once I found that lots of councils forbade any re-use, and the data that&amp;rsquo;s available is too inconsistent for me to compare and visualize.&lt;br /&gt;&lt;br /&gt;Therefore much time and effort was spent looking for suitable data. I was interested in mainly environmental type data, which was to found mainly on the Ministry for the Environment website. I was also interested in regional level data, instead of a single national figure, which wasn&amp;rsquo;t that interesting .&lt;br /&gt;&lt;br /&gt;In the end, I found suitable data for land use, rates, farm animal counts, population, and waste. Given more time, I would have hunted for transport data, which would then completely encompass all the major responsibilities of a regional council.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Putting it together&lt;/b&gt;&lt;br /&gt;This mashup was made with Ruby on Rails, TileMill (&lt;a href=&#34;http://mapbox.com/tilemill/&#34;&gt;http://mapbox.com/tilemill/&lt;/a&gt;), d3 (&lt;a href=&#34;http://mbostock.github.com/d3/&#34;&gt;http://mbostock.github.com/d3/&lt;/a&gt;) and polymaps (&lt;a href=&#34;http://polymaps.org/&#34;&gt;http://polymaps.org/&lt;/a&gt;)&lt;br /&gt;&lt;br /&gt;The excellent Koordinates.com put up a CC licensed shapefile of various land types in New Zealand. Instead of reaching for the de-facto choice of Google maps, this time I chose to try my hand at creating custom map tiles from that data. This had the advantage of being able to design the map to be far friendlier for statistical visualizations like cartograms, etc. &lt;br /&gt;&lt;br /&gt;TileMill is simply a brilliant piece of software, which allows once to pull data from various sources and create beautiful maps, using any style you want. In addition, there are options for mouseover and click events.&lt;br /&gt;&lt;br /&gt;There is an export function which will allow you to host the map tiles online ala Google Maps. I chose to utilise the hosted service at TileStream (&lt;a href=&#34;http://mapbox.com/#/tilestream&#34;&gt;http://mapbox.com/#/tilestream&lt;/a&gt;). It is completely possible to self-host as well, as the hosting code has been made available at&lt;a href=&#34;https://github.com/mapbox/tilestream&#34;&gt;https://github.com/mapbox/tilestream&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;The final map I produced using TileMill can be seen at &lt;a href=&#34;http://www.landandwaste.co.nz/land&#34;&gt;http://www.landandwaste.co.nz/land&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;Importing and processing the tabular data seen on the mashup was just a matter of using a combination of Google Docs, Google Refine, and csv files. Choosing a suitable graphical representation for each set of data was slightly tougher. I used a combination of sparklines, quantile maps, and just plain text. This was done using d3 and polymaps. &lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;table align=&#34;center&#34; cellpadding=&#34;0&#34; cellspacing=&#34;0&#34; class=&#34;tr-caption-container&#34; style=&#34;margin-left: auto; margin-right: auto; text-align: center;&#34;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://blog.kuahyeow.com/legacyBlogger/400/Screen+shot+2011-09-16+at+1.44.48+PM.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;tr-caption&#34; style=&#34;text-align: center;&#34;&gt;Land use area visualization (example here for Bay of Plenty)&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div&gt;&lt;span style=&#34;font-family: inherit;&#34;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;table align=&#34;center&#34; cellpadding=&#34;0&#34; cellspacing=&#34;0&#34; class=&#34;tr-caption-container&#34; style=&#34;margin-left: auto; margin-right: auto; text-align: center;&#34;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&#34;text-align: center;&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://blog.kuahyeow.com/legacyBlogger/400/Screen+shot+2011-09-16+at+1.43.05+PM.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;tr-caption&#34; style=&#34;text-align: center;&#34;&gt;Waste visualization for each region in New Zealand&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div&gt;&lt;span style=&#34;font-family: inherit;&#34;&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Where to from here&lt;/b&gt;&lt;br /&gt;It was a huge learning experience. I learnt that creating something useful is very possible, and takes less time than I expected. Creating something polished requires far more time. I will definitely find a designer or improve my own design skills next time.&lt;/span&gt;&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fix home/end keybindings in Terminal.app on OS X</title>
      <link>https://blog.kuahyeow.com/posts/fix-homeend-keybindings-in-terminalapp/</link>
      <pubDate>Mon, 13 Sep 2010 11:07:00 +1200</pubDate>
      
      <guid>https://blog.kuahyeow.com/posts/fix-homeend-keybindings-in-terminalapp/</guid>
      <description>&lt;p&gt;&lt;div class=&#34;Amp_Content_Outer_Bookmark&#34;&gt;&lt;div class=&#34;Amp_Bookmark_Link&#34;&gt;&lt;a rel=&#34;clipsource&#34; target=&#34;_blank&#34; title=&#34;http://www.yaroze.org/?p=79&#34; href=&#34;http://www.yaroze.org/?p=79&#34;&gt;&lt;a href=&#34;http://www.yaroze.org/?p=79&#34;&gt;http://www.yaroze.org/?p=79&lt;/a&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;Amp_Commentary_Wrap&#34;&gt;&lt;div class=&#34;Amp_Post_Text&#34;&gt;&lt;p&gt;Go all the way to the end of the less buffer! Drove me crazy the way end behaves exactly like page down instead. This tip fixed that for me.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;Amp_Link&#34;&gt;See this Amp at &lt;a href=&#34;http://amplify.com/u/abkv&#34;&gt;http://amplify.com/u/abkv&lt;/a&gt;&lt;/div&gt;&lt;br/&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why Users Fill Out Forms Faster With Top Aligned Labels | UXMovement.com</title>
      <link>https://blog.kuahyeow.com/posts/why-users-fill-out-forms-faster-with/</link>
      <pubDate>Thu, 02 Sep 2010 10:56:00 +1200</pubDate>
      
      <guid>https://blog.kuahyeow.com/posts/why-users-fill-out-forms-faster-with/</guid>
      <description>&lt;p&gt;&lt;div class=&#34;Amp_Content_Outer_Bookmark&#34;&gt;&lt;div class=&#34;Amp_Bookmark_Link&#34;&gt;URL: &amp;nbsp;&lt;a rel=&#34;clipsource&#34; target=&#34;_blank&#34; title=&#34;http://uxmovement.com/design-articles/faster-with-top-aligned-labels&#34; href=&#34;http://uxmovement.com/design-articles/faster-with-top-aligned-labels&#34;&gt;&lt;a href=&#34;http://uxmovement.com/design-articles/faster-with-top-a..&#34;&gt;http://uxmovement.com/design-articles/faster-with-top-a..&lt;/a&gt;.&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;Amp_Link&#34;&gt;See this Amp at &lt;a href=&#34;http://amplify.com/u/9kjp&#34;&gt;http://amplify.com/u/9kjp&lt;/a&gt;&lt;/div&gt;&lt;br/&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Untitled</title>
      <link>https://blog.kuahyeow.com/posts/untitled/</link>
      <pubDate>Mon, 23 Aug 2010 14:35:00 +1200</pubDate>
      
      <guid>https://blog.kuahyeow.com/posts/untitled/</guid>
      <description>&lt;p&gt;&lt;div class=&#34;Amp_Content_Outer&#34;&gt;&lt;div class=&#34;Amp_Top_Wrap&#34;&gt;&lt;div class=&#34;Amp_Source_First&#34;&gt;&lt;span&gt;Amplify&amp;rsquo;d from &lt;a rel=&#34;clipsource&#34; target=&#34;_blank&#34; title=&#34;http://martinfowler.com/eaaCatalog/identityMap.html&#34; href=&#34;http://martinfowler.com/eaaCatalog/identityMap.html&#34;&gt;martinfowler.com&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;Amp_Middle_Wrap&#34;&gt;&lt;blockquote class=&#34;Amp_Content_Item&#34; cite=&#34;http://martinfowler.com/eaaCatalog/identityMap.html&#34;&gt;&lt;table cellpadding=&#34;0&#34; cellspacing=&#34;0&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;h1 align=&#34;center&#34; id=&#34;AutoGeneratedID-0&#34;&gt;Identity Map&lt;/h1&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;div class=&#34;Amp_Content_Hr&#34;&gt;&lt;/div&gt;&lt;blockquote class=&#34;Amp_Content_Item&#34; cite=&#34;http://martinfowler.com/eaaCatalog/identityMap.html&#34;&gt;&lt;table cellpadding=&#34;0&#34; cellspacing=&#34;0&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;i id=&#34;AutoGeneratedID-1&#34;&gt;Ensures that each object gets loaded only once by keeping&lt;br /&gt;every loaded object in a map. Looks up objects using the map when&lt;br /&gt;referring to them.&lt;/i&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;div class=&#34;Amp_Content_Hr&#34;&gt;&lt;/div&gt;&lt;blockquote class=&#34;Amp_Content_Item&#34; cite=&#34;http://martinfowler.com/eaaCatalog/identityMap.html&#34;&gt;&lt;table cellpadding=&#34;0&#34; cellspacing=&#34;0&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;p id=&#34;AutoGeneratedID-3&#34;&gt;An old proverb says that a man with two watches never knows&lt;br /&gt;what time it is. If two watches are confusing, you can get in an even&lt;br /&gt;bigger mess with loading objects from a database. If you aren&amp;rsquo;t&lt;br /&gt;careful you can load the data from the same database record into two&lt;br /&gt;different objects. Then, when you update them both you&amp;rsquo;ll have an&lt;br /&gt;interesting time writing the changes out to the database&lt;br /&gt;correctly.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;div class=&#34;Amp_Content_Hr&#34;&gt;&lt;/div&gt;&lt;blockquote class=&#34;Amp_Content_Item&#34; cite=&#34;http://martinfowler.com/eaaCatalog/identityMap.html&#34;&gt;&lt;table cellpadding=&#34;0&#34; cellspacing=&#34;0&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;p id=&#34;AutoGeneratedID-4&#34;&gt;An Identity Map keeps a record of all objects that have been&lt;br /&gt;read from the database in a single business transaction. Whenever you&lt;br /&gt;want an object, you check the Identity Map first to see if you already&lt;br /&gt;have it.&lt;/p&gt;&lt;span class=&#34;Amp_Source_Button&#34;&gt;&lt;a rel=&#34;clipsource&#34; target=&#34;_blank&#34; title=&#34;http://martinfowler.com/eaaCatalog/identityMap.html&#34; href=&#34;http://martinfowler.com/eaaCatalog/identityMap.html&#34;&gt;Read more at martinfowler.com&lt;/a&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;div class=&#34;Amp_Bottom_Wrap&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;Amp_Link&#34;&gt;See this Amp at &lt;a href=&#34;http://amplify.com/u/92bh&#34;&gt;http://amplify.com/u/92bh&lt;/a&gt;&lt;/div&gt;&lt;br/&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Facebook - greedy defaults and jarring configs</title>
      <link>https://blog.kuahyeow.com/posts/facebook-greedy-defaults-and-jarring/</link>
      <pubDate>Mon, 23 Aug 2010 12:29:00 +1200</pubDate>
      
      <guid>https://blog.kuahyeow.com/posts/facebook-greedy-defaults-and-jarring/</guid>
      <description>&lt;p&gt;Commited Facebook Suicide for the second time. Where do I start? &amp;hellip;&lt;br /&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;br /&gt;The first thing that jarred me was that my full birthday is published. This in combination with search engine visibility means that it&amp;rsquo;s spammer time.&lt;br /&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;br /&gt;Next thing that happened is that the privacy settings had &amp;ldquo;Everyone&amp;rdquo;, &amp;ldquo;Friends of Friends&amp;rdquo;, and &amp;ldquo;Friends&amp;rdquo;. Nice and simple, I thought. But no, I have to exclude my full birthday again from everyone. (I know about how your friend&amp;rsquo;s applications can just mine everyone&amp;rsquo;s data through friends).&lt;br /&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;br /&gt;Ok, I&amp;rsquo;ll just &lt;em&gt;configure&lt;/em&gt; that again.&lt;br /&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;br /&gt;What do I see next. Social &lt;strong&gt;Ads&lt;/strong&gt;. Ads. Default On. In my name. I hate Ads that purport to be in my name. That&amp;rsquo;s it. Goodbye.&lt;br /&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;br /&gt;&amp;ndash;&lt;br /&gt;
&lt;br /&gt;Here are some tools below that can help you, but to be honest, I don&amp;rsquo;t think anyone can keep up with the myriad of configurations.&lt;br /&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;br /&gt;&lt;a class=&#34;ot-anchor&#34; href=&#34;http://www3.untangle.com/saveface&#34;&gt;&lt;a href=&#34;http://www3.untangle.com/saveface&#34;&gt;http://www3.untangle.com/saveface&lt;/a&gt;&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;a class=&#34;ot-anchor&#34; href=&#34;http://www.reclaimprivacy.org/&#34;&gt;&lt;a href=&#34;http://www.reclaimprivacy.org/&#34;&gt;http://www.reclaimprivacy.org/&lt;/a&gt;&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;a class=&#34;ot-anchor&#34; href=&#34;http://github.com/mjpizz/reclaimprivacy&#34;&gt;&lt;a href=&#34;http://github.com/mjpizz/reclaimprivacy&#34;&gt;http://github.com/mjpizz/reclaimprivacy&lt;/a&gt;&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;a class=&#34;ot-anchor&#34; href=&#34;http://itunes.apple.com/us/app/s-n-a-p/id384773305&#34;&gt;&lt;a href=&#34;http://itunes.apple.com/us/app/s-n-a-p/id384773305&#34;&gt;http://itunes.apple.com/us/app/s-n-a-p/id384773305&lt;/a&gt;&lt;/a&gt;&lt;div class=&#34;Amp_Link&#34;&gt;See this Amp at &lt;a href=&#34;http://amplify.com/u/9252&#34;&gt;http://amplify.com/u/9252&lt;/a&gt;&lt;/div&gt;&lt;br/&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bash hackery to get around old rspec</title>
      <link>https://blog.kuahyeow.com/posts/bash-hackery-to-get-around-old-rspec/</link>
      <pubDate>Fri, 18 Jun 2010 15:07:00 +1200</pubDate>
      
      <guid>https://blog.kuahyeow.com/posts/bash-hackery-to-get-around-old-rspec/</guid>
      <description>&lt;p&gt;I have a problem where a project is using an older version of RSpec (currently the lastest version is RSpec 1.3.0). Therefore running&lt;br /&gt;&lt;blockquote&gt;spec spec/model/some_model_spec.rb&lt;/blockquote&gt;gives me an error&lt;br /&gt;&lt;blockquote&gt;/spec/models/../spec_helper.rb:23: undefined method `use_transactional_fixtures=&amp;rsquo;&lt;/blockquote&gt;The solution would be to use the older, vendored spec. Now, the spec binary that is installed as part of the gem installation should do this (some gems do checked for vendor&amp;rsquo;ed binaries) and my rspec is installed under vendor/plugins, not vendor/gems. Therefore, &amp;nbsp;I use some bash trickery to dynamically redefine the &amp;ldquo;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-family: &#39;Courier New&#39;, Courier, monospace;&#34;&gt;spec&lt;/span&gt;&amp;rdquo; command. Put the code below in .bashrc :&lt;br /&gt;&lt;pre&gt;&lt;code&gt;&lt;br /&gt;vendored_or_path_spec() {&lt;br /&gt;  if [ -x vendor/plugins/rspec/bin/spec ];&lt;br /&gt;  then &lt;br /&gt;    echo &amp;lsquo;vendor/plugins/rspec/bin/spec&amp;rsquo;;&lt;br /&gt;  else&lt;br /&gt;    echo &amp;lsquo;*spec&amp;rsquo;;&lt;br /&gt;  fi&lt;br /&gt;}&lt;br /&gt;alias spec=&amp;lsquo;$(vendored_or_path_spec) $@&amp;rsquo;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;&lt;br /&gt;Some explanations. The hardest thing to figure out was how to dynamically alias something. After such scrumbling and asking on vark.com, I managed to find &lt;a href=&#34;https://secure.wikimedia.org/wikipedia/en/wiki/Command_substitution&#34;&gt;command substitutions&lt;/a&gt;, which is the $(command) part. Combining that with $@ for all arguments meant that I can run any command in the alias. &lt;br /&gt;&lt;br /&gt;Because I&amp;rsquo;m aliasing spec, I use *spec to refer to the original un-aliased spec.&lt;br /&gt;&lt;br /&gt;That&amp;rsquo;s it!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to upgrade to Firefox 3.6 for Karmic (Ubuntu 9.10) - firefox-stable</title>
      <link>https://blog.kuahyeow.com/posts/how-to-install-firefox-36-for-karmic/</link>
      <pubDate>Fri, 23 Apr 2010 22:09:00 +1200</pubDate>
      
      <guid>https://blog.kuahyeow.com/posts/how-to-install-firefox-36-for-karmic/</guid>
      <description>&lt;p&gt;There are a plethora of install instructions out there for Firefox 3.6 Karmic (which uses Firefox 3.5 by default), however it mostly suggests the mozilla-daily build.&lt;br /&gt;&lt;div style=&#34;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&#34;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&#34;&gt;By chance, I found the firefox-stable ppa (&lt;a href=&#34;https://launchpad.net/~mozillateam/+archive/firefox-stable/&#34;&gt;https://launchpad.net/~mozillateam/+archive/firefox-stable/&lt;/a&gt;)&lt;/div&gt;&lt;div style=&#34;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&#34;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&#34;&gt;Here&amp;rsquo;s how (enter each in turn):&lt;/div&gt;&lt;div style=&#34;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&#34;&gt;&lt;/div&gt;&lt;blockquote&gt;sudo add-apt-repository ppa:mozillateam/firefox-stable&lt;/blockquote&gt;&lt;blockquote&gt;sudo apt-get update&lt;/blockquote&gt;&lt;blockquote&gt;sudo apt-get upgrade&lt;/blockquote&gt;&lt;blockquote&gt;sudo apt-get dist-upgrade&lt;/blockquote&gt;&lt;div style=&#34;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&#34;&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-family: inherit;&#34;&gt;Here&amp;rsquo;s what it looks like:&lt;/span&gt;&lt;/div&gt;&lt;blockquote&gt;~ $ sudo apt-get upgrade&lt;/blockquote&gt;&lt;blockquote&gt;Reading package lists&amp;hellip; Done&lt;/blockquote&gt;&lt;blockquote&gt;Building dependency tree &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/blockquote&gt;&lt;blockquote&gt;Reading state information&amp;hellip; Done&lt;/blockquote&gt;&lt;blockquote&gt;The following packages have been kept back:&lt;/blockquote&gt;&lt;blockquote&gt;&amp;nbsp;&amp;nbsp;firefox firefox-3.5 firefox-3.5-branding firefox-gnome-support&lt;/blockquote&gt;&lt;blockquote&gt;0 upgraded, 0 newly installed, 0 to remove and 4 not upgraded.&lt;/blockquote&gt;&lt;blockquote&gt;~ $ sudo apt-get dist-upgrade&lt;/blockquote&gt;&lt;blockquote&gt;Reading package lists&amp;hellip; Done&lt;/blockquote&gt;&lt;blockquote&gt;Building dependency tree &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/blockquote&gt;&lt;blockquote&gt;Reading state information&amp;hellip; Done&lt;/blockquote&gt;&lt;blockquote&gt;Calculating upgrade&amp;hellip; Done&lt;/blockquote&gt;&lt;blockquote&gt;The following NEW packages will be installed:&lt;/blockquote&gt;&lt;blockquote&gt;&amp;nbsp;&amp;nbsp;firefox-branding&lt;/blockquote&gt;&lt;blockquote&gt;The following packages will be upgraded:&lt;/blockquote&gt;&lt;blockquote&gt;&amp;nbsp;&amp;nbsp;firefox firefox-3.5 firefox-3.5-branding firefox-gnome-support&lt;/blockquote&gt;&lt;blockquote&gt;4 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.&lt;/blockquote&gt;&lt;blockquote&gt;Need to get 12.5MB of archives.&lt;/blockquote&gt;&lt;blockquote&gt;After this operation, 32.4MB of additional disk space will be used.&lt;/blockquote&gt;&lt;blockquote&gt;Do you want to continue [Y/n]? y&lt;/blockquote&gt;&lt;div&gt;You will now get &lt;span class=&#34;Apple-style-span&#34; style=&#34;font-family: &#39;Courier New&#39;, Courier, monospace;&#34;&gt;/usr/binfirefox&lt;/span&gt; as Firefox 3.6&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>